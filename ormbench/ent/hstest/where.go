// Code generated by ent, DO NOT EDIT.

package hstest

import (
	"enttest/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldID, id))
}

// Age applies equality check predicate on the "age" field. It's identical to AgeEQ.
func Age(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldAge, v))
}

// Rowname applies equality check predicate on the "rowname" field. It's identical to RownameEQ.
func Rowname(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldRowname, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldValue, v))
}

// Updatetime applies equality check predicate on the "updatetime" field. It's identical to UpdatetimeEQ.
func Updatetime(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldUpdatetime, v))
}

// Body applies equality check predicate on the "body" field. It's identical to BodyEQ.
func Body(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldBody, v))
}

// Floa applies equality check predicate on the "floa" field. It's identical to FloaEQ.
func Floa(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldFloa, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldLevel, v))
}

// AgeEQ applies the EQ predicate on the "age" field.
func AgeEQ(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldAge, v))
}

// AgeNEQ applies the NEQ predicate on the "age" field.
func AgeNEQ(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldAge, v))
}

// AgeIn applies the In predicate on the "age" field.
func AgeIn(vs ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldAge, vs...))
}

// AgeNotIn applies the NotIn predicate on the "age" field.
func AgeNotIn(vs ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldAge, vs...))
}

// AgeGT applies the GT predicate on the "age" field.
func AgeGT(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldAge, v))
}

// AgeGTE applies the GTE predicate on the "age" field.
func AgeGTE(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldAge, v))
}

// AgeLT applies the LT predicate on the "age" field.
func AgeLT(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldAge, v))
}

// AgeLTE applies the LTE predicate on the "age" field.
func AgeLTE(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldAge, v))
}

// RownameEQ applies the EQ predicate on the "rowname" field.
func RownameEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldRowname, v))
}

// RownameNEQ applies the NEQ predicate on the "rowname" field.
func RownameNEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldRowname, v))
}

// RownameIn applies the In predicate on the "rowname" field.
func RownameIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldRowname, vs...))
}

// RownameNotIn applies the NotIn predicate on the "rowname" field.
func RownameNotIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldRowname, vs...))
}

// RownameGT applies the GT predicate on the "rowname" field.
func RownameGT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldRowname, v))
}

// RownameGTE applies the GTE predicate on the "rowname" field.
func RownameGTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldRowname, v))
}

// RownameLT applies the LT predicate on the "rowname" field.
func RownameLT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldRowname, v))
}

// RownameLTE applies the LTE predicate on the "rowname" field.
func RownameLTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldRowname, v))
}

// RownameContains applies the Contains predicate on the "rowname" field.
func RownameContains(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContains(FieldRowname, v))
}

// RownameHasPrefix applies the HasPrefix predicate on the "rowname" field.
func RownameHasPrefix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasPrefix(FieldRowname, v))
}

// RownameHasSuffix applies the HasSuffix predicate on the "rowname" field.
func RownameHasSuffix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasSuffix(FieldRowname, v))
}

// RownameEqualFold applies the EqualFold predicate on the "rowname" field.
func RownameEqualFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEqualFold(FieldRowname, v))
}

// RownameContainsFold applies the ContainsFold predicate on the "rowname" field.
func RownameContainsFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContainsFold(FieldRowname, v))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldValue, v))
}

// ValueContains applies the Contains predicate on the "value" field.
func ValueContains(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContains(FieldValue, v))
}

// ValueHasPrefix applies the HasPrefix predicate on the "value" field.
func ValueHasPrefix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasPrefix(FieldValue, v))
}

// ValueHasSuffix applies the HasSuffix predicate on the "value" field.
func ValueHasSuffix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasSuffix(FieldValue, v))
}

// ValueEqualFold applies the EqualFold predicate on the "value" field.
func ValueEqualFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEqualFold(FieldValue, v))
}

// ValueContainsFold applies the ContainsFold predicate on the "value" field.
func ValueContainsFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContainsFold(FieldValue, v))
}

// UpdatetimeEQ applies the EQ predicate on the "updatetime" field.
func UpdatetimeEQ(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldUpdatetime, v))
}

// UpdatetimeNEQ applies the NEQ predicate on the "updatetime" field.
func UpdatetimeNEQ(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldUpdatetime, v))
}

// UpdatetimeIn applies the In predicate on the "updatetime" field.
func UpdatetimeIn(vs ...time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldUpdatetime, vs...))
}

// UpdatetimeNotIn applies the NotIn predicate on the "updatetime" field.
func UpdatetimeNotIn(vs ...time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldUpdatetime, vs...))
}

// UpdatetimeGT applies the GT predicate on the "updatetime" field.
func UpdatetimeGT(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldUpdatetime, v))
}

// UpdatetimeGTE applies the GTE predicate on the "updatetime" field.
func UpdatetimeGTE(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldUpdatetime, v))
}

// UpdatetimeLT applies the LT predicate on the "updatetime" field.
func UpdatetimeLT(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldUpdatetime, v))
}

// UpdatetimeLTE applies the LTE predicate on the "updatetime" field.
func UpdatetimeLTE(v time.Time) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldUpdatetime, v))
}

// BodyEQ applies the EQ predicate on the "body" field.
func BodyEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldBody, v))
}

// BodyNEQ applies the NEQ predicate on the "body" field.
func BodyNEQ(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldBody, v))
}

// BodyIn applies the In predicate on the "body" field.
func BodyIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldBody, vs...))
}

// BodyNotIn applies the NotIn predicate on the "body" field.
func BodyNotIn(vs ...string) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldBody, vs...))
}

// BodyGT applies the GT predicate on the "body" field.
func BodyGT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldBody, v))
}

// BodyGTE applies the GTE predicate on the "body" field.
func BodyGTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldBody, v))
}

// BodyLT applies the LT predicate on the "body" field.
func BodyLT(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldBody, v))
}

// BodyLTE applies the LTE predicate on the "body" field.
func BodyLTE(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldBody, v))
}

// BodyContains applies the Contains predicate on the "body" field.
func BodyContains(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContains(FieldBody, v))
}

// BodyHasPrefix applies the HasPrefix predicate on the "body" field.
func BodyHasPrefix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasPrefix(FieldBody, v))
}

// BodyHasSuffix applies the HasSuffix predicate on the "body" field.
func BodyHasSuffix(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldHasSuffix(FieldBody, v))
}

// BodyEqualFold applies the EqualFold predicate on the "body" field.
func BodyEqualFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldEqualFold(FieldBody, v))
}

// BodyContainsFold applies the ContainsFold predicate on the "body" field.
func BodyContainsFold(v string) predicate.Hstest {
	return predicate.Hstest(sql.FieldContainsFold(FieldBody, v))
}

// FloaEQ applies the EQ predicate on the "floa" field.
func FloaEQ(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldFloa, v))
}

// FloaNEQ applies the NEQ predicate on the "floa" field.
func FloaNEQ(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldFloa, v))
}

// FloaIn applies the In predicate on the "floa" field.
func FloaIn(vs ...float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldFloa, vs...))
}

// FloaNotIn applies the NotIn predicate on the "floa" field.
func FloaNotIn(vs ...float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldFloa, vs...))
}

// FloaGT applies the GT predicate on the "floa" field.
func FloaGT(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldFloa, v))
}

// FloaGTE applies the GTE predicate on the "floa" field.
func FloaGTE(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldFloa, v))
}

// FloaLT applies the LT predicate on the "floa" field.
func FloaLT(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldFloa, v))
}

// FloaLTE applies the LTE predicate on the "floa" field.
func FloaLTE(v float64) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldFloa, v))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...int) predicate.Hstest {
	return predicate.Hstest(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v int) predicate.Hstest {
	return predicate.Hstest(sql.FieldLTE(FieldLevel, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Hstest) predicate.Hstest {
	return predicate.Hstest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Hstest) predicate.Hstest {
	return predicate.Hstest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Hstest) predicate.Hstest {
	return predicate.Hstest(sql.NotPredicates(p))
}
